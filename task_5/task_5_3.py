# Напечатайте ряд чисел Фибоначчи до введенного номера n
# f[0] = 1, f[1] = 1
# f[k] = f[k - 1] + f[k – 2]
# Пример последовательности:
# 1, 1, 2, 3, 5, 8, 13, 21, …

f = int(input())
fib = []
while True: # цикл пока существует f
    n1 = 1 # первое число (первое, которое не 0)
    #n2 = 1
    n2 = 0 # нет, первое все же 0
    if f  < 1:  # выход, если то, что ввели 1 или меньше
        break
    for f in range(f):      # наверное самое сложное. пока число в диапазоне самого себя. Это поймал методом тыка. Непонял как.
        addv = n2           # промежуточная перемнная, без которой, почемуто просто ряд степеней двойки
                            # изначально, предполагаем ее 0 (как следующее число) С 0 мы никак не можем начать, весь ряд будет 0....
        n2 = (n2 + n1)      # следующее число - сумма, текщего и следующего
        n1 = addv           # а вотпредыдущее, ставим как первое значение "следующего" только для цикла.
        #print(n1, n2)      # тут весело) Все итерации
    fib.append(n2)              # и не хватало единицы, первой, из за знака <= для условия выхода
print(sorted(fib))







